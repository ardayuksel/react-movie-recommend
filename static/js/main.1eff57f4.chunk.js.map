{"version":3,"sources":["loading.gif","filmTypes.js","components/Result.js","pages/Results.js","moods.js","pages/Home.js","pages/PageNotFound.js","App.js","index.js"],"names":["filmTypes","Result","result","className","main","temp","name","src","weather","icon","Results","location","useLocation","imdb","state","mood","latitude","coordinate","longitude","useState","weatherData","setWeatherData","movieData","setMovieData","filmType","setFilmType","randomMovie","setRandomMovie","Math","floor","random","randomMoviePage","setRandomMoviePage","totalPagesFound","setTotalPagesFound","WEATHER_API_URL","process","MOVIE_API_URL","MOVIE_API_URL_RANDOM_PAGE","time","Date","toLocaleTimeString","hour","minute","getRandomItem","items","length","getWeatherData","a","axios","get","data","getRandomMoviePage","randomPage","getRandomMovieIndex","getMovieData","then","res","total_pages","results","catch","err","console","log","useEffect","Button","onClick","id","vote_average","title","poster_path","alt","loading","moods","Home","schema","yup","required","formik","useFormik","initialValues","validationSchema","setLatitude","setLongitude","dataToSend","values","permitted","setPermitted","navigator","geolocation","getCurrentPosition","position","coords","Container","as","Col","lg","Form","onSubmit","handleSubmit","Select","value","onChange","handleChange","to","pathname","disabled","obj","o","allTrue","type","PageNotFound","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"+TAAe,MAA0B,oCCA5BA,EACH,KADGA,EAEA,KAFAA,EAGA,KAHAA,EAIH,KAJGA,EAKJ,KALIA,EAME,KANFA,EAQH,QARGA,EASF,KATEA,EAWH,KAXGA,EAYJ,QAZIA,EAaF,OAbEA,EAcF,QAdEA,EAeM,MAfNA,EAgBD,QAhBCA,EAiBD,KAjBCA,EAkBN,QAlBMA,EAmBF,K,0CCHIC,EAhBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,qCACE,sBAAKC,UAAU,yBAAf,UACE,oBAAGA,UAAU,kBAAb,UAAgCD,EAAOE,KAAKC,KAA5C,aACA,uBACA,mBAAGF,UAAU,wBAAb,SAAsCD,EAAOI,UAE/C,qBACEH,UAAU,cACVI,IAAG,4CAAuCL,EAAOM,QAAQ,GAAGC,KAAzD,iBCyMIC,EA1MC,WACd,IAAMC,EAAWC,cACXC,EAAOF,EAASG,MAAMD,KACtBE,EAAOJ,EAASG,MAAMC,KACtBC,EAAWL,EAASG,MAAMG,WAAWD,SACrCE,EAAYP,EAASG,MAAMG,WAAWC,UAC5C,EAAsCC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCF,qBAAlC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,qBAAhC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAsCN,qBAAtC,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAA8CR,oBAAS,WACrD,OAAOS,KAAKC,MAAsB,GAAhBD,KAAKE,aADzB,mBAAOC,EAAP,KAAwBC,EAAxB,KAGA,EAA8Cb,oBAAS,WACrD,OAAOS,KAAKC,MAAsB,GAAhBD,KAAKE,aADzB,mBAAOG,GAAP,KAAwBC,GAAxB,KAGMC,GAAe,8DAA0DnB,EAA1D,gBAA0EE,EAA1E,+BAA0GkB,oCACzHC,GAAa,8DAA0DD,mCAA1D,6CAAkIvB,EAAlI,wBAAsJW,GACnKc,GAAyB,8DAA0DF,mCAA1D,iCAAsHL,EAAtH,6BAA0JlB,EAA1J,wBAA8KW,GAEvMe,IADO,IAAIC,MACCC,mBAAmB,QAAS,CAC5CC,KAAM,UACNC,OAAQ,YAEJC,GAAgB,SAACC,GACrB,OAAOA,EAAMjB,KAAKC,MAAMD,KAAKE,SAAWe,EAAMC,UAwH1CC,GAAc,uCAAG,4BAAAC,EAAA,sEACAC,IAAMC,IAAIf,IADV,OACfjC,EADe,OAErBmB,EAAenB,EAAOiD,MAFD,2CAAH,qDAIdC,GAAqB,WAEzB,IAAIC,GAVoB,WACxB,IAAM3B,EAAcE,KAAKC,MAAsB,GAAhBD,KAAKE,UACpCH,EAAeD,GAOf4B,GAGED,EADEpB,GAAkB,IACPL,KAAKC,MAAsB,IAAhBD,KAAKE,UAEhBF,KAAKC,MAAMD,KAAKE,SAAWG,IAE1CD,EAAmBqB,IAEfE,GAAY,uCAAG,4BAAAP,EAAA,sEACEC,IAClBC,IAAIb,IACJmB,MAAK,SAACC,GACLvB,GAAmBuB,EAAIN,KAAKO,aAC5BN,KACA7B,EAAa,MACb0B,IACGC,IAAIZ,IACJkB,MAAK,SAACC,GACLlC,EAAakC,EAAIN,KAAKQ,YAEvBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,SAE/BD,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAdX,cACb3D,EADa,yBAeZA,GAfY,2CAAH,qDAwBlB,OANA8D,qBAAU,WApJNzB,IAAQ,SACRA,IAAQ,UACC,GAARxB,GAAqB,GAARA,GAAqB,GAARA,GAAqB,GAARA,GAUxCU,EAAYmB,GARA,CACV5C,EACAA,EACAA,EACAA,EACAA,EACAA,KAIFuC,IAAQ,SACRA,IAAQ,UACC,GAARxB,GAAqB,GAARA,GAAqB,GAARA,GAAqB,GAARA,GAYxCU,EAAYmB,GAVA,CACV5C,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,KAIFuC,IAAQ,SACRA,IAAQ,UACC,GAARxB,GAAqB,GAARA,GAAqB,GAARA,GAAqB,GAARA,GAGxCU,EAAYmB,GADA,CAAC5C,EAAkBA,EAAmBA,KAGlDuC,IAAQ,SACRA,IAAQ,UACC,GAARxB,GAAqB,GAARA,GAAqB,GAARA,GAAqB,GAARA,GAWxCU,EAAYmB,GATA,CACV5C,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,KAIFuC,IAAQ,SACRA,IAAQ,UACC,GAARxB,GAAqB,GAARA,GAAqB,GAARA,GAAqB,GAARA,GASxCU,EAAYmB,GAPA,CACV5C,EACAA,EACAA,EACAA,EACAA,KAIFuC,IAAQ,SACRA,IAAQ,UACC,GAARxB,GAAqB,GAARA,GAAqB,GAARA,GAAqB,GAARA,GAWxCU,EAAYmB,GATA,CACV5C,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,KAIFuC,IAAQ,SACRA,IAAQ,UACC,GAARxB,GAAqB,GAARA,GAAqB,GAARA,GAAqB,GAARA,GAUxCU,EAAYmB,GARA,CACV5C,EACAA,EACAA,EACAA,EACAA,EACAA,KAIFuC,IAAQ,SACRA,IAAQ,UACC,GAARxB,GAAqB,GAARA,GAAqB,GAARA,GAAqB,GAARA,IAaxCU,EAAYmB,GAXA,CACV5C,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,KA2CJ+C,KACAQ,OACC,IAGD,sBAAKpD,UAAU,iBAAf,UACGiB,GAAe,cAAC,EAAD,CAAQlB,OAAQkB,IAChC,cAAC6C,EAAA,EAAD,CAAQC,QAAS,kBAAMX,MAAvB,0BACCjC,GACC,mBAAG6C,GAAG,aAAN,SAAoB7C,EAAUI,GAAa0C,eAE5C9C,GAAa,mBAAG6C,GAAG,cAAN,SAAqB7C,EAAUI,GAAa2C,QACzD/C,GACC,qBACEf,IAAG,yCAAoCe,EAAUI,GAAa4C,aAC9DH,GAAG,SACHI,IAAI,0BAGNjD,GAAa,qBAAKf,IAAKiE,EAASL,GAAG,cAAcI,IAAI,gB,2DC/MhDE,EACF,IADEA,EAED,IAFCA,EAGF,IAHEA,EAIL,IAJKA,EAKJ,IALIA,EAMN,IANMA,EAOA,IAPAA,EAQJ,I,OCiGMC,MAjGf,WACE,IAAMC,EAASC,IAAW,CACxB/D,KAAM+D,MAAaC,WACnB9D,KAAM6D,MAAaC,aAGfC,EAASC,YAAU,CACvBC,cAAe,CACbnE,KAAM,GACNE,KAAM,IAERkE,iBAAkBN,IAEpB,EAAgCxD,mBAAS,GAAzC,mBAAOH,EAAP,KAAiBkE,EAAjB,KACA,EAAkC/D,mBAAS,GAA3C,mBAAOD,EAAP,KAAkBiE,EAAlB,KACMlE,EAAa,CAAED,WAAUE,aACzBkE,EAAU,2BAAQN,EAAOO,QAAf,IAAuBpE,eACvC,EAAkCE,oBAAS,GAA3C,mBAAOmE,EAAP,KAAkBC,EAAlB,KAkBA,OARAvB,qBAAU,WACRwB,UAAUC,YAAYC,oBAAmB,SAAiBC,GACxDT,EAAYS,EAASC,OAAO5E,UAC5BmE,EAAaQ,EAASC,OAAO1E,WAC7BqE,GAAa,QAEd,IAGD,qBAAKpF,UAAU,UAAf,SACE,eAAC0F,EAAA,EAAD,CAAWC,GAAIC,IAAKC,GAAG,IAAvB,UACE,eAACC,EAAA,EAAD,CAAMC,SAAUpB,EAAOqB,aAAvB,UACE,eAACF,EAAA,EAAKG,OAAN,CACEjG,UAAU,cACVG,KAAK,OACL+F,MAAOvB,EAAOO,OAAOxE,KACrByF,SAAUxB,EAAOyB,aACjB,aAAW,yBALb,UAOE,wBAAQF,MAAM,GAAd,uCACA,wBAAQA,MAAM,IAAd,gBACA,wBAAQA,MAAM,IAAd,gBACA,wBAAQA,MAAM,IAAd,gBACA,wBAAQA,MAAM,IAAd,gBACA,wBAAQA,MAAM,IAAd,gBACA,wBAAQA,MAAM,IAAd,gBACA,wBAAQA,MAAM,IAAd,gBACA,wBAAQA,MAAM,IAAd,gBACA,wBAAQA,MAAM,IAAd,mBAGF,eAACJ,EAAA,EAAKG,OAAN,CACEjG,UAAU,cACVG,KAAK,OACL+F,MAAOvB,EAAOO,OAAOtE,KACrBuF,SAAUxB,EAAOyB,aACjB,aAAW,yBALb,UAOE,wBAAQF,MAAM,GAAd,wCACA,wBAAQA,MAAO5B,EAAf,qBACA,wBAAQ4B,MAAO5B,EAAf,sBACA,wBAAQ4B,MAAO5B,EAAf,qBACA,wBAAQ4B,MAAO5B,EAAf,kBACA,wBAAQ4B,MAAO5B,EAAf,mBACA,wBAAQ4B,MAAO5B,EAAf,iBACA,wBAAQ4B,MAAO5B,EAAf,uBACA,wBAAQ4B,MAAO5B,EAAf,sBAGF,cAAC,gBAAD,CACEtE,UAAU,iBACVqG,GAAI,CAAEC,SAAU,WAAY3F,MAAOsE,GAFrC,SAIE,cAACnB,EAAA,EAAD,CACEyC,UA9DZ,SAAiBC,GACf,IAAK,IAAIC,KAAKD,EACZ,IAAKA,EAAIC,GAAI,OAAO,EAEtB,QAAKtB,EA0DgBuB,CAAQ/B,EAAOO,QAC1BlF,UAAU,kBACV2G,KAAK,SAHP,yBASFxB,EAEE,KADF,mBAAGnF,UAAU,aAAb,0CCxFK4G,G,OARM,WACnB,OACE,sBAAK5G,UAAU,iBAAf,UACE,qCACA,oD,OCcS6G,MAdf,WACE,OACE,mCACE,cAAC,gBAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWzC,IACjC,cAAC,IAAD,CAAOuC,KAAK,WAAWC,OAAK,EAACC,UAAWzG,IACxC,cAAC,IAAD,CAAOuG,KAAK,IAAIC,OAAK,EAACC,UAAWJ,YCT3CK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1eff57f4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.c7d9f081.gif\";","export const filmTypes = {\n  ACTION: \"28\",\n  ADVENTURE: \"12\",\n  ANIMATION: \"16\",\n  COMEDY: \"35\",\n  CRIME: \"80\",\n  DOCUMENTARY: \"99\",\n  DRAMA: \"18\",\n  FAMILY: \"10751\",\n  FANTASY: \"14\",\n  HISTORY: \"36\",\n  HORROR: \"27\",\n  MUSIC: \"10402\",\n  MYSTERY: \"9648\",\n  ROMANCE: \"10749\",\n  SCIENCE_FICTION: \"878\",\n  TV_MOVIE: \"10770\",\n  THRILLER: \"53\",\n  WAR: \"10752\",\n  WESTERN: \"37\",\n};\n","const Result = ({ result }) => {\n  return (\n    <>\n      <div className=\"weather-text-container\">\n        <p className=\"weather-celcius\">{result.main.temp} &#8451;</p>\n        <hr />\n        <p className=\"weather-location-name\">{result.name}</p>\n      </div>\n      <img\n        className=\"img-weather\"\n        src={`https://openweathermap.org/img/wn/${result.weather[0].icon}@2x.png`}\n      />\n    </>\n  );\n};\n\nexport default Result;\n","import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport loading from \"../loading.gif\";\nimport { filmTypes } from \"../filmTypes\";\nimport axios from \"axios\";\nimport \"./styles/Results.css\";\nimport { Button } from \"react-bootstrap\";\nimport Result from \"../components/Result\";\n\nconst Results = () => {\n  const location = useLocation();\n  const imdb = location.state.imdb;\n  const mood = location.state.mood;\n  const latitude = location.state.coordinate.latitude;\n  const longitude = location.state.coordinate.longitude;\n  const [weatherData, setWeatherData] = useState();\n  const [movieData, setMovieData] = useState();\n  const [filmType, setFilmType] = useState();\n  const [randomMovie, setRandomMovie] = useState();\n  const [randomMoviePage, setRandomMoviePage] = useState(() => {\n    return Math.floor(Math.random() * 20);\n  });\n  const [totalPagesFound, setTotalPagesFound] = useState(() => {\n    return Math.floor(Math.random() * 20);\n  });\n  const WEATHER_API_URL = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`;\n  const MOVIE_API_URL = `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US&&vote_average.gte=${imdb}&with_genres=${filmType}`;\n  const MOVIE_API_URL_RANDOM_PAGE = `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US&&page=${randomMoviePage}&vote_average.gte=${imdb}&with_genres=${filmType}`;\n  const date = new Date();\n  const time = date.toLocaleTimeString(\"fr-FR\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n  const getRandomItem = (items) => {\n    return items[Math.floor(Math.random() * items.length)];\n  };\n  const checkTime = () => {\n    if (\n      time >= \"00:00\" &&\n      time <= \"06:00\" &&\n      (mood == 1 || mood == 2 || mood == 3 || mood == 4)\n    ) {\n      let items = [\n        filmTypes.ADVENTURE,\n        filmTypes.COMEDY,\n        filmTypes.FAMILY,\n        filmTypes.FANTASY,\n        filmTypes.MUSIC,\n        filmTypes.ROMANCE,\n      ];\n      setFilmType(getRandomItem(items));\n    } else if (\n      time >= \"00:00\" &&\n      time <= \"06:00\" &&\n      (mood == 5 || mood == 6 || mood == 7 || mood == 8)\n    ) {\n      let items = [\n        filmTypes.ACTION,\n        filmTypes.COMEDY,\n        filmTypes.DOCUMENTARY,\n        filmTypes.FANTASY,\n        filmTypes.HORROR,\n        filmTypes.SCIENCE_FICTION,\n        filmTypes.WAR,\n        filmTypes.THRILLER,\n      ];\n      setFilmType(getRandomItem(items));\n    } else if (\n      time >= \"06:01\" &&\n      time <= \"12:00\" &&\n      (mood == 1 || mood == 2 || mood == 3 || mood == 4)\n    ) {\n      let items = [filmTypes.COMEDY, filmTypes.FANTASY, filmTypes.TV_MOVIE];\n      setFilmType(getRandomItem(items));\n    } else if (\n      time >= \"06:01\" &&\n      time <= \"12:00\" &&\n      (mood == 5 || mood == 6 || mood == 7 || mood == 8)\n    ) {\n      let items = [\n        filmTypes.ADVENTURE,\n        filmTypes.COMEDY,\n        filmTypes.FAMILY,\n        filmTypes.FANTASY,\n        filmTypes.MUSIC,\n        filmTypes.ROMANCE,\n        filmTypes.TV_MOVIE,\n      ];\n      setFilmType(getRandomItem(items));\n    } else if (\n      time >= \"12:01\" &&\n      time <= \"18:00\" &&\n      (mood == 1 || mood == 2 || mood == 3 || mood == 4)\n    ) {\n      let items = [\n        filmTypes.ANIMATION,\n        filmTypes.COMEDY,\n        filmTypes.FAMILY,\n        filmTypes.FANTASY,\n        filmTypes.TV_MOVIE,\n      ];\n      setFilmType(getRandomItem(items));\n    } else if (\n      time >= \"12:01\" &&\n      time <= \"18:00\" &&\n      (mood == 5 || mood == 6 || mood == 7 || mood == 8)\n    ) {\n      let items = [\n        filmTypes.ACTION,\n        filmTypes.CRIME,\n        filmTypes.HORROR,\n        filmTypes.SCIENCE_FICTION,\n        filmTypes.THRILLER,\n        filmTypes.WAR,\n        filmTypes.WESTERN,\n      ];\n      setFilmType(getRandomItem(items));\n    } else if (\n      time >= \"18:01\" &&\n      time <= \"23:59\" &&\n      (mood == 1 || mood == 2 || mood == 3 || mood == 4)\n    ) {\n      let items = [\n        filmTypes.COMEDY,\n        filmTypes.DOCUMENTARY,\n        filmTypes.FAMILY,\n        filmTypes.SCIENCE_FICTION,\n        filmTypes.TV_MOVIE,\n        filmTypes.ROMANCE,\n      ];\n      setFilmType(getRandomItem(items));\n    } else if (\n      time >= \"18:01\" &&\n      time <= \"23:59\" &&\n      (mood == 5 || mood == 6 || mood == 7 || mood == 8)\n    ) {\n      let items = [\n        filmTypes.COMEDY,\n        filmTypes.ACTION,\n        filmTypes.CRIME,\n        filmTypes.SCIENCE_FICTION,\n        filmTypes.HORROR,\n        filmTypes.MYSTERY,\n        filmTypes.THRILLER,\n        filmTypes.WAR,\n        filmTypes.WESTERN,\n      ];\n      setFilmType(getRandomItem(items));\n    }\n  };\n  var getRandomMovieIndex = () => {\n    const randomMovie = Math.floor(Math.random() * 20);\n    setRandomMovie(randomMovie);\n  };\n  const getWeatherData = async () => {\n    const result = await axios.get(WEATHER_API_URL);\n    setWeatherData(result.data);\n  };\n  const getRandomMoviePage = () => {\n    getRandomMovieIndex();\n    let randomPage;\n    if (totalPagesFound > 500) {\n      randomPage = Math.floor(Math.random() * 500);\n    } else {\n      randomPage = Math.floor(Math.random() * totalPagesFound);\n    }\n    setRandomMoviePage(randomPage);\n  };\n  const getMovieData = async () => {\n    const result = await axios\n      .get(MOVIE_API_URL)\n      .then((res) => {\n        setTotalPagesFound(res.data.total_pages);\n        getRandomMoviePage();\n        setMovieData(null);\n        axios\n          .get(MOVIE_API_URL_RANDOM_PAGE)\n          .then((res) => {\n            setMovieData(res.data.results);\n          })\n          .catch((err) => console.log(err));\n      })\n      .catch((err) => console.log(err));\n    return result;\n  };\n\n  useEffect(() => {\n    checkTime();\n    getWeatherData();\n    getMovieData();\n  }, []);\n\n  return (\n    <div className=\"wrapper-result\">\n      {weatherData && <Result result={weatherData} />}\n      <Button onClick={() => getMovieData()}>Random Movie</Button>\n      {movieData && (\n        <p id=\"movie-imdb\">{movieData[randomMovie].vote_average}</p>\n      )}\n      {movieData && <p id=\"movie-title\">{movieData[randomMovie].title}</p>}\n      {movieData && (\n        <img\n          src={`https://image.tmdb.org/t/p/w400${movieData[randomMovie].poster_path}`}\n          id=\"poster\"\n          alt=\"Poster is not found!\"\n        />\n      )}\n      {!movieData && <img src={loading} id=\"loading-gif\" alt=\"loading\" />}\n    </div>\n  );\n};\nexport default Results;\n","export const moods = {\n  EXCITED: \"1\",\n  CHEERFUL: \"2\",\n  RELAXED: \"3\",\n  CALM: \"4\",\n  BORED: \"5\",\n  SAD: \"6\",\n  IRRITATED: \"7\",\n  TENSE: \"8\",\n};\n","import { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Form, Button, Container, Col } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { moods } from \"../moods\";\nimport \"./styles/App.css\";\n\nfunction Home() {\n  const schema = yup.object({\n    imdb: yup.string().required(),\n    mood: yup.string().required(),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      imdb: \"\",\n      mood: \"\",\n    },\n    validationSchema: schema,\n  });\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const coordinate = { latitude, longitude };\n  const dataToSend = { ...formik.values, coordinate };\n  const [permitted, setPermitted] = useState(false);\n\n  function allTrue(obj) {\n    for (var o in obj) {\n      if (!obj[o]) return false;\n    }\n    if (!permitted) return false;\n    return true;\n  }\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function success(position) {\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n      setPermitted(true);\n    });\n  }, []);\n\n  return (\n    <div className=\"wrapper\">\n      <Container as={Col} lg=\"4\">\n        <Form onSubmit={formik.handleSubmit}>\n          <Form.Select\n            className=\"form-select\"\n            name=\"imdb\"\n            value={formik.values.imdb}\n            onChange={formik.handleChange}\n            aria-label=\"Default select example\"\n          >\n            <option value=\"\">Select Minimum IMDB Score</option>\n            <option value=\"1\">1+</option>\n            <option value=\"2\">2+</option>\n            <option value=\"3\">3+</option>\n            <option value=\"4\">4+</option>\n            <option value=\"5\">5+</option>\n            <option value=\"6\">6+</option>\n            <option value=\"7\">7+</option>\n            <option value=\"8\">8+</option>\n            <option value=\"9\">9+</option>\n          </Form.Select>\n\n          <Form.Select\n            className=\"form-select\"\n            name=\"mood\"\n            value={formik.values.mood}\n            onChange={formik.handleChange}\n            aria-label=\"Default select example\"\n          >\n            <option value=\"\">Select Your Currently Mood</option>\n            <option value={moods.EXCITED}>Excited</option>\n            <option value={moods.CHEERFUL}>Cheerful</option>\n            <option value={moods.RELAXED}>Relaxed</option>\n            <option value={moods.CALM}>Calm</option>\n            <option value={moods.BORED}>Bored</option>\n            <option value={moods.SAD}>Sad</option>\n            <option value={moods.IRRITATED}>Irritated</option>\n            <option value={moods.TENSE}>Tense</option>\n          </Form.Select>\n\n          <LinkContainer\n            className=\"link-container\"\n            to={{ pathname: \"/results\", state: dataToSend }}\n          >\n            <Button\n              disabled={!allTrue(formik.values)}\n              className=\"btn btn-primary\"\n              type=\"submit\"\n            >\n              SUBMIT\n            </Button>\n          </LinkContainer>\n        </Form>\n        {!permitted ? (\n          <p className=\"text-alert\">Please Allow Locations</p>\n        ) : null}\n      </Container>\n    </div>\n  );\n}\n\nexport default Home;\n","import \"./styles/PageNotFound.css\";\n\nconst PageNotFound = () => {\n  return (\n    <div className=\"page-not-found\">\n      <h1>404</h1>\n      <p>Page Not Found</p>\n    </div>\n  );\n};\nexport default PageNotFound;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Results from \"./pages/Results\";\nimport Home from \"./pages/Home\";\nimport PageNotFound from \"./pages/PageNotFound\";\nimport \"./pages/styles/reset.css\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/results\" exact component={Results} />\n          <Route path=\"*\" exact component={PageNotFound} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}